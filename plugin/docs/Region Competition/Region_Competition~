<html>
  <head>
    <title>Region Competition</title>
    <meta content="">
    <style></style>
  </head>
  <body>
<h2>Region Competition</h2>
  This plugins is based on the MOSAIC on Discrete region competition or Front alghorithm, for image segmentation
<p>J.&nbsp;Cardinale, G.&nbsp;Paul, and I.&nbsp;F. Sbalzarini. Discrete region competition for unknown numbers of connected regions. <em>IEEE Trans. Image Process.</em>, 21(8):3531â€“3545, 2012. (<a href="http://www.mosaic.ethz.ch/research/pubs/docs/Cardinale2012.pdf" target="_blank">PDF</a>)</p>

Just after opening the plugins you will be in front of this window

The alghorithm is setted with default paramenters, so in order to take look you can just put an input source image and press OK.

<h2>Installation</h2>
Copy the mosaic plugins.jar file to the ImageJs plugins directory. Restart ImageJ.
The plugin can be launched from the Mosaic submenu in ImageJs plugin menu.
The plugin handles 8-bit, 16-bit and 32-bit grayscale images or stacks.


<h2>Algorithm and Interface</h2>

The alghorithm require the following input and produce the following output<br>
<br>
<table>
  <tbody>
    <tr>
      <td><h3>Input</h3></td>
      <td><h3>Output</h3></td>
    </tr>
    <tr>
      <td><strong>Image source</strong></td>
      <td><strong>Label output image</strong></td>
    </tr>
    <tr>
      <td><strong>Energy function</strong></td>
      <td><strong>Intensity normalized image</strong></td>
    </tr>
    <tr>
      <td><strong>Energy function parameters</strong></td>
      <td><strong>Animated iteration sequence</strong></td>
    </tr>
    <tr>
      <td><strong>Label image source (optional)</strong></td>
      <td></td>
    </tr>
  </tbody>
</table>
<br>
<br>
<strong>Image source:</strong> Can be in the most common format, the image is converted into an intensity normalized image<br>
<strong>Intensity normalized image:</strong> Is an image where each pixel just run from 0.0 to 1.0<br>
<strong>Label image source:</strong> Is the segmented image produced by the alghorithm, it can be saved in most common format<br>
<strong>Animated iteration sequence:</strong> Is the evolution of the segmentation produced by the alghorithm, can be saved only on GIF format<br>
<strong>Energy function:</strong> The segmentation is driven by the minimization of an energy function taken as parameter. In the Actual implementation there are three type of energy function PS , PC, Deconvolution. Each of them is used to manage different situation.
The default is PS, refer to the paper for further explanation, and the criteria on how to choose the best one<br>
<strong>Label image source:</strong> This is an optional image that define the region starting situation. If not given the default is to use an autogenerated label start<br>
<strong>Energy function parameters:</strong> An energy function can require aditional parameter to work, but each energy model have a set of default parameters

<h2>Step by step tutorial</h2>

<table>
  <tbody>
    <tr>
      <td><IMG src="RegionCM.jpg" width="579" height="422" align="left" border="0"></td>
      <td><h3>Select an image</h3>
Press OpenImage button and choose the file, or drag and drop the file inside the Open Image rectangle. if the file is is already opened in ImageJ, choose it from input selector.</td>
    </tr>
  </tbody>
</table>

<table>
  <tbody>
    <tr>
      <td><IMG src="RegionPAR.jpg" width="617" height="341" align="left" border="0"></td>
      <td><h3>Select paramenters</h3>
Press Parameters button in the main window, you can tune global parameters like Maxium numer of iteration and Oscillation threshold that control the convergence of the alghorithm and global energy parameters, like Lambda and Theta.<br>
<br>
<strong>Lambda E lenght</strong>: Is a scaling factor for the Energy lenght, this energy in general control the shape of the region<br>
<strong>Theta E merge</strong>: Is a factor needed for the merging energy function, this energy implement model that control the merging of two regions<br>
<strong>Max Iteration</strong>: Is the maxiumum number of iteration<br>
<strong>Oscillation Threadshold</strong>: This parameter control the convergence of the algorithm in this way, at each iteration the global energy is stored and the standard deviation is calculated along all history, and the last 10 iterations, if <IMG src="Oscillation.jpg" width="182" height="57" align="left" border="0"> the number of fixed particles needed to converge is reduced by a factor two<br>
    </tr>
  </tbody>
</table>


<h3>E data</h3>
<br>
This is the Energy part that depend from the input image, each model have an "options window" that can be opened pressing the near "Options" button<br>
<br>
<table>
  <tbody>
    <tr>
      <td><IMG src="E_pc.jpg" width="253" height="79" align="left" border="0"></td>
      <td><h3>PC</h3> No Additional options are available<br></td>
    </tr>
    <tr>
      <td><IMG src="E_ps.jpg" width="503" height="254" align="left" border="0"></td>
      <td><h3>PS</h3><br>
	<strong>Radius</strong>: Radius of the sphere where the intensity mean is calculated<br>
	<strong>Beta Ballon force</strong>: Beta control the strenght of the Ballon force<br>
      </td>
    </tr>
    <tr>
      <td><IMG src="E_dev.jpg" width="425" height="304" align="left" border="0"></td>
      <td><h3>Deconvolution</h3><br>
	<strong>Open PSF Image</strong>: Open an image and use it as Point Spread Function<br>
	<strong>Generate:</strong>Generate a gaussian PSF Image, before starting the simulation<br>
      </td>
    </tr>
  </tbody>
</table>
<br>
Use paper [1] for a detailed explanation of each model, term and parameter
<br>
<br>
<h3>Energy lenght model</h3>

<table>
  <tbody>
    <tr>
      <td>
<IMG src="E_lenght.jpg" width="301" height="242" align="left" border="0">
      </td>
      <td>
<h3>Sphere Regularization</h3><br>
	<strong>Radius</strong>: Radius of the hypersphere in the curvature regularization<br>
      </td>
    </tr>
   </tbody>
</table>

[1] for a detailed explanation

Sphere: No additional paramenters

<h4>Energy Merge</h4>

[1] for a detailed explanation


Only one model has been implemented and one paramenter is required


<h4>Initialization</h4>

Local Maxima: Create label regions over over local maxima
Rectangle: Use rectangular label image


Bubble: Create a grid of bubbles, radius and displacement can be setted pressing options


<h2>Examples</h2>


<table>
  <tbody>
    <tr>
      <td><IMG src="icecream5_rs.gif" width="410" height="410" align="left" border="0"></td>
      <td><h2>PC</h2>
      </td>
    </tr>
    <tr>
    </tr>
    <tr>
      <td><IMG src="Dev_res_rs.gif" width="196" height="288" align="left" border="0"></td>
      <td><h2>Deconvolution</h2>
    </tr>


  </body>
</html>
