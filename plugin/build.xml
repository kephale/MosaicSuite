<project name="MosaicToolbox" default="" basedir=".">

    <description>
        Mosaic Toolbox build file
    </description>


    <!-- ****************************************************************** -->
    <!-- Suggested way to work on MOSAIC Toolbox Suite is to configure 
	     proper environmental variable -->
    <!-- ****************************************************************** -->
    <property environment="env" />
    <echo message="MOSAIC plugin path to Fiji: [${env.FIJI_MOSAIC_PLUGIN_PATH}]" />
    <property name="pluginsDir" location="${env.FIJI_MOSAIC_PLUGIN_PATH}" />
    <!-- Path to Fiji can be also provided by giving fixed location. 
	     To do so uncomment line below and set proper path. -->
    <!-- <property name="pluginsDir"  location="/path/to/your/Fiji.app/plugins/Mosaic_ToolSuite" /> -->


    <!-- ****************************************************************** -->
    <!-- Shouldn't be necessary to change something below here, 
         except you know what you are doing. -->
    <!-- ****************************************************************** -->
    <property name="src" location="src" />
    <property name="build" location="bin" />
    <property name="dist" location="dist" />
    <property name="name" value="Mosaic" />
    <property name="jarfilename" value="Mosaic_ToolSuite" />

    <target name="test">
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <pathelement path="${pluginsDir}/Mosaic_ToolSuite.jar" />
                <fileset dir="lib">
                    <include name="*.jar" />
                </fileset>
                <fileset dir="${pluginsDir}/../../jars">
                    <include name="*.jar" />
                </fileset>
                <fileset dir="${pluginsDir}/..">
                    <include name="*.jar" />
                </fileset>
            </classpath>
            <formatter type="plain" usefile="false" />
            <test name="mosaic.region_competition.Jtest" haltonfailure="no" outfile="result">
                <formatter type="plain" />
                <formatter type="xml" />
            </test>
        </junit>
    </target>

    <target name="main" depends="clean,build,compress" description="Main target">
        <echo>
            Clean, compile and compressing the .jar file.
        </echo>
    </target>

    <target name="main_debug" depends="clean,build,compress_debug" description="Main debug target">
        <echo>
            Clean, compile and compressing the .jar file (debug).
        </echo>
    </target>

    <target name="compress_debug" depends="" description="Generate the debug distribution">
        <echo>
            Building the .jar file.
        </echo>
        <jar jarfile="${pluginsDir}/${jarfilename}.jar" update="true">
            <fileset dir="." includes="plugins.config" />
            <fileset dir="${build}" includes="**/*.*" />
            <fileset dir="${src}" includes="**/*.java" />
            <fileset dir="." includes="macros/*.ijm" />

            <!-- Add needed libs directly to the IJ eclipse project and not 
                 into this ant target "compress", for faster debugging 
                 Add the libs to the target "compressLibs", to get 
                 a working plugin for other ImageJ instances outside of eclipse -->

            <zipgroupfileset dir="lib" includes="imglib2-*.jar" excludes="*.config" />

            <manifest>
                <attribute name="Built-By" value="${name}" />
            </manifest>
        </jar>
    </target>

    <target name="compress" depends="" description="Generate the distribution">
        <echo>
            Building the .jar file.
        </echo>
        <jar jarfile="${pluginsDir}/${jarfilename}.jar" update="true">
            <fileset dir="." includes="plugins.config" />
            <fileset dir="${build}" includes="**/*.*" />
            <fileset dir="." includes="macros/*.ijm" />
            <fileset dir="." includes="Rscript.r" />

            <!-- Add needed libs directly to the IJ eclipse project and not 
                 into this ant target "compress", for faster debugging 
                 Add the libs to the target "compressLibs", to get 
                 a working plugin for other ImageJ instances outside of eclipse -->

            <!-- Include for imageJ 1.44 -->
            <!--<zipgroupfileset dir="lib" includes="*.jar" excludes="*.config"/>-->

            <zipgroupfileset dir="lib" includes="jtransforms-2.4.jar" excludes="*.config" />
            <zipgroupfileset dir="lib" includes="javaml-0.1.7.jar" excludes="*.config" />
            <zipgroupfileset dir="lib" includes="mines-jtk-20100113.jar" excludes="*.config" />
            <zipgroupfileset dir="lib" includes="edu_mines_jtk.jar" excludes="*.config" />
            <zipgroupfileset dir="lib" includes="commons-io-2.4.jar" excludes="*.config" />
            <zipgroupfileset dir="lib" includes="dozer.jar" excludes="*.config" />
            <zipgroupfileset dir="lib" includes="commons-beanutils-1.8.3.jar" excludes="*.config" />
            <zipgroupfileset dir="lib" includes="commons-lang3-3.1.jar" excludes="*.config" />
            <zipgroupfileset dir="lib" includes="commons-logging-1.1.3.jar" excludes="*.config" />
            <zipgroupfileset dir="lib" includes="super-csv-2.1.0.jar" excludes="*.config" />
            <zipgroupfileset dir="lib" includes="super-csv-dozer-2.1.0.jar" excludes="*.config" />
            <manifest>
                <attribute name="Built-By" value="${name}" />
            </manifest>
        </jar>
    </target>

    <target name="clean" description="deletes all binaries and jars">
        <echo>
            Deleting files...
        </echo>
        <delete>
            <fileset dir="${pluginsDir}" includes="${jarfilename}.jar" />
        </delete>
        <delete>
            <fileset dir="${build}" includes="*.class" />
        </delete>
        <echo>
            ... done.
        </echo>
    </target>

    <!-- classpath for project build -->
    <path id="build.classpath">
        <pathelement location="${build}" />
        <pathelement path="lib" />

        <fileset dir="lib/">
            <include name="*.jar" />
        </fileset>
    </path>

    <target name="build">
        <mkdir dir="${build}" />
        <javac debug="true" includeantruntime="false" srcdir="src/" destdir="bin/" classpathref="build.classpath" classpath="${build.classpath}" />
    </target>

    <target name="compressLibs" depends="compress" description="generate the distribution with all libs">
        <echo>
            Adding all libs to the .jar.
        </echo>
        <jar jarfile="${pluginsDir}/${jarfilename}.jar" update="true">
            <manifest>
                <attribute name="Built-By" value="${name}" />
            </manifest>
        </jar>
    </target>

    <target name="proguard" depends="compressLibs">
        <taskdef resource="proguard/ant/task.properties" classpath="${proguard.jar}" />
        <proguard configuration="MosaicToolbox.pro" />
    </target>

</project>
